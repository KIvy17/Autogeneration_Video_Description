# -*- coding: utf-8 -*-
"""Custom_dataset_Creation.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hE4RmO7d3wtHJoF5qUXF8LL7UNmnn6Ho
"""

import pandas as pd
import random
# Чтение CSV файла
df = pd.read_csv('train.csv')

# Получение уникальных значений из колонки 'category_name'
unique_categories = df['category_name'].unique()

# Вывод уникальных значений
print("Уникальные значения из колонки 'category_name':")
for category in unique_categories:
    print(category)

print(len(unique_categories))

df

import pandas as pd
import random

# Чтение CSV файла
df = pd.read_csv('train.csv')

# Получение уникальных категорий
unique_categories = df['category_name'].unique()

# Гарантируем выбор хотя бы одного видео из каждой категории
selected_videos = []
for category in unique_categories:
    category_videos = df[df['category_name'] == category]
    if not category_videos.empty:
        selected_videos.append(category_videos.sample(n=1))

# Довбор оставшихся видео до 50
remaining_videos_count = 50 - len(selected_videos)
if remaining_videos_count > 0:
    remaining_videos = df[~df.index.isin([video.index[0] for video in selected_videos])]
    selected_videos.append(remaining_videos.sample(n=remaining_videos_count))

# Объединяем все выбранные видео в один DataFrame
selected_df = pd.concat(selected_videos, ignore_index=True)

# Mount Google Drive
from google.colab import drive
drive.mount('/content/drive')

import pandas as pd
import random
import os


# Чтение CSV файла
df = pd.read_csv('train.csv')

# Получение уникальных категорий
unique_categories = df['category_name'].unique()

# Гарантируем выбор хотя бы одного видео из каждой категории
selected_videos = []
for category in unique_categories:
    category_videos = df[df['category_name'] == category]
    if not category_videos.empty:
        selected_videos.append(category_videos.sample(n=1))

# Довбор оставшихся видео до 50
remaining_videos_count = 50 - len(selected_videos)
if remaining_videos_count > 0:
    remaining_videos = df[~df.index.isin([video.index[0] for video in selected_videos])]
    selected_videos.append(remaining_videos.sample(n=remaining_videos_count))

# Объединяем все выбранные видео в один DataFrame
selected_df = pd.concat(selected_videos, ignore_index=True)

# Добавляем новую колонку для описания
selected_df['yandex_desc'] = ""

# Сохраняем DataFrame в новый CSV файл
selected_df.to_csv('selected_videos.csv')

# Создание новой папки на Google Диске
def create_folder(folder_path):
    if not os.path.exists(folder_path):
        os.makedirs(folder_path)

# Создание папки для сохранения файлов
folder_path = '/AutogenerateVideoDescriptions/CustomDataset'
create_folder(folder_path)

# Сохранение файлов в созданную папку
!cp selected_videos.csv '/AutogenerateVideoDescriptions/CustomDataset'
for index, row in selected_df.iterrows():
    print(f"Название видео: {row['title']}")
    description = input("Введите описание: ")
    if description == "-":
        # Удаляем видео, если пришёл знак "-"
        category_videos = df[df['category_name'] == row['category_name']]
        new_video = category_videos[~category_videos['stt_name'].isin([row['stt_name']])]
        selected_df.at[index, 'title'] = new_video['title'].values[0]
        selected_df.at[index, 'stt_name'] = new_video['stt_name'].values[0]
        selected_df.at[index, 'yandex_desc'] = "+"
    else:
        # Записываем описание в отдельный файл txt
        with open(f"{row['stt_name']}", "w", encoding="utf-8") as text_file:
            text_file.write(description)
        selected_df.at[index, 'yandex_desc'] = "+"
        # Копируем файлы на Google Диск
        !cp "$row['stt_name'].txt" "$folder_path"

# Сохраняем обновленный DataFrame в новый CSV файл
selected_df.to_csv('selected_videos_with_desc.csv', index=False, sep='\t')

# Сохраняем обновленный DataFrame в новый CSV файл
selected_df.to_csv('selected_videos_with_desc.csv', index=False, sep='\t')

selected_df

import os

# Убедитесь, что путь существует, или создайте его
output_dir = '/AutogenerateVideoDescriptions/CustomDataset'

if not os.path.exists(output_dir):
    os.makedirs(output_dir)

# Список файлов для создания
file_names = [
    "175.txt", "135.txt", "100.txt", "56.txt", "185.txt", "460.txt", "255.txt", "288.txt",
    "208.txt", "112.txt", "290.txt", "270.txt", "413.txt", "436.txt", "476.txt", "269.txt",
    "30.txt", "84.txt", "103.txt", "200.txt", "85.txt", "91.txt", "152.txt", "17.txt",
    "468.txt", "358.txt", "486.txt", "353.txt", "291.txt", "405.txt", "313.txt", "72.txt",
    "235.txt", "3.txt", "125.txt", "117.txt", "300.txt", "446.txt", "410.txt", "272.txt"
]

# Создание файлов
for file_name in file_names:
    file_path = os.path.join(output_dir, file_name)
    with open(file_path, 'w') as file:
        file.write("")  # Создаем пустой файл

print("Файлы успешно созданы!")

# Запрос текста для записи в файл
while True:
    file_number = input("Введите номер файла (или 'exit' для выхода): ")
    if file_number.lower() == 'exit':
        break
    file_name = f"{file_number}.txt"
    if file_name in file_names:
        text = input(f"Введите текст для записи в файл {file_name}: ")
        file_path = os.path.join(output_dir, file_name)
        with open(file_path, 'w') as file:
            file.write(text)
        print(f"Текст успешно записан в файл {file_name}!")
    else:
        print(f"Файл {file_name} не найден в списке. Попробуйте снова.")